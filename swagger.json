{
  "swagger": "2.0",
  "info": {
    "title": "Garden Forum API",
    "description": "An API for accessing a public gardening forum and plant information database.",
    "version": "1.0.0"
  },
  "host": "cse341-final-project-26gf.onrender.com",
  "basePath": "/",
  "tags": [
    {
      "name": "Forums",
      "description": "A suite of APIs for accessing and managing forum threads."
    },
    {
      "name": "Plant Information",
      "description": "A suite of APIs for accessing and managing plant information."
    },
    {
      "name": "Users",
      "description": "A suite of APIs for managing user accounts and viewing public user information."
    }
  ],
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "oAuth": {
      "type": "oauth2",
      "description": "The authorization method used by this backend runs on Auth0.",
      "authorizationUrl": "https://RENDER-URL-HERE/login",
      "flow": "authorizationCode"
    }
  },
  "paths": {
    "/forum/": {
      "get": {
        "tags": [
          "Forums"
        ],
        "description": "Returns all forum posts from the database.",
        "parameters": [],
        "responses": {}
      },
      "post": {
        "tags": [
          "Forums"
        ],
        "description": "Posts a new forum thread in the database.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "The new forum thread to add to the database.",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Forum Name"
                },
                "category": {
                  "type": "string",
                  "example": "Forum Category"
                },
                "desc": {
                  "type": "string",
                  "example": "A lengthy forum post."
                },
                "comments": {
                  "type": "array",
                  "example": [],
                  "items": {}
                }
              },
              "required": [
                "title",
                "category",
                "desc",
                "comments"
              ]
            }
          }
        ],
        "responses": {},
        "security": [
          {
            "oAuth": []
          }
        ]
      }
    },
    "/forum/{forumId}": {
      "get": {
        "tags": [
          "Forums"
        ],
        "description": "Returns one forum thread from the database.",
        "parameters": [
          {
            "name": "forumId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The forum ID for the database to retrieve"
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Forums"
        ],
        "description": "Updates a forum post in the database.",
        "parameters": [
          {
            "name": "forumId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The forum post ID for the database to update."
          },
          {
            "name": "obj",
            "in": "body",
            "description": "The new forum thread to add to the database.",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Forum Name"
                },
                "category": {
                  "type": "string",
                  "example": "Forum Category"
                },
                "desc": {
                  "type": "string",
                  "example": "A lengthy forum post."
                }
              },
              "required": [
                "title",
                "category",
                "desc"
              ]
            }
          }
        ],
        "responses": {},
        "security": [
          {
            "oAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Forums"
        ],
        "description": "Deletes a forum thread from the database.",
        "parameters": [
          {
            "name": "forumId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The forum thread ID for the database to delete."
          }
        ],
        "responses": {},
        "security": [
          {
            "oAuth": []
          }
        ]
      }
    },
    "/forum/{forumId}/{commentId}": {
      "get": {
        "tags": [
          "Forums"
        ],
        "description": "Returns one forum thread from the database.",
        "parameters": [
          {
            "name": "forumId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The forum ID for the database to retrieve"
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The comment ID for the database to retrieve"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Forums"
        ],
        "description": "Posts a comment in a forum thread in the database.",
        "parameters": [
          {
            "name": "forumId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The forum ID to add the comment to."
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "The new comment to add to the forum thread.",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string",
                  "example": "A lengthy comment."
                }
              },
              "required": [
                "comment"
              ]
            }
          }
        ],
        "responses": {},
        "security": [
          {
            "oAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Forums"
        ],
        "description": "Posts a comment in a forum thread in the database.",
        "parameters": [
          {
            "name": "forumId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The forum ID the comment is part of."
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The comment ID for the database to edit."
          },
          {
            "name": "obj",
            "in": "body",
            "description": "The edited comment to update the forum thread.",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string",
                  "example": "An updated lengthy comment."
                }
              },
              "required": [
                "comment"
              ]
            }
          }
        ],
        "responses": {},
        "security": [
          {
            "oAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Forums"
        ],
        "description": "Deletes a comment from a forum thread.",
        "parameters": [
          {
            "name": "forumId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The forum ID the offending comment is part of."
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The comment ID for the database to delete."
          }
        ],
        "responses": {},
        "security": [
          {
            "oAuth": []
          }
        ]
      }
    },
    "/plants/": {
      "get": {
        "tags": [
          "Plant Information"
        ],
        "description": "Returns all plant descriptions from the database.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Plant Information"
        ],
        "description": "Stores a plant description in the database.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "NamePlant": {
                  "example": "any"
                },
                "Description": {
                  "example": "any"
                },
                "Type_of_tree": {
                  "example": "any"
                },
                "gender_of_tree": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/plants/{plantid}": {
      "get": {
        "tags": [
          "Plant Information"
        ],
        "description": "Returns one plant description from the database.",
        "parameters": [
          {
            "name": "plantid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/plants/{plantId}": {
      "put": {
        "tags": [
          "Plant Information"
        ],
        "description": "Updates a plant description in the database.",
        "parameters": [
          {
            "name": "plantId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "NamePlant": {
                  "example": "any"
                },
                "Description": {
                  "example": "any"
                },
                "Type_of_tree": {
                  "example": "any"
                },
                "gender_of_tree": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Plant Information"
        ],
        "description": "Deletes a plant description from the database.",
        "parameters": [
          {
            "name": "plantId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Returns the logged in user",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "oAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Creates a user account and stores it in the database. NOTE: Password and name will be authenticated using OpenIDConnect/Auth0. We will NOT store passwords in our database.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "The user account information to add to the database.",
            "schema": {
              "type": "object",
              "properties": {
                "forumPosts": {
                  "type": "array",
                  "example": [],
                  "items": {}
                },
                "comments": {
                  "type": "array",
                  "example": [],
                  "items": {}
                },
                "userName": {
                  "type": "string",
                  "example": "username"
                },
                "bio": {
                  "type": "string",
                  "example": "A biography."
                },
                "joinDate": {
                  "type": "number",
                  "example": 0
                }
              },
              "required": [
                "forumPosts",
                "comments",
                "userName"
              ]
            }
          }
        ],
        "responses": {}
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Updates the logged in user",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "The user account information to update in the database.",
            "schema": {
              "type": "object",
              "properties": {
                "forumPosts": {
                  "type": "array",
                  "example": [],
                  "items": {}
                },
                "comments": {
                  "type": "array",
                  "example": [],
                  "items": {}
                },
                "userName": {
                  "type": "string",
                  "example": "username"
                },
                "bio": {
                  "type": "string",
                  "example": "An updated biography."
                }
              },
              "required": [
                "forumPosts",
                "comments",
                "userName"
              ]
            }
          }
        ],
        "responses": {},
        "security": [
          {
            "oAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Deletes the logged in user from the database.",
        "parameters": [],
        "responses": {},
        "security": [
          {
            "oAuth": []
          }
        ]
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Returns the public information available for a user.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {},
        "security": [
          {
            "oAuth": []
          }
        ]
      }
    }
  }
}